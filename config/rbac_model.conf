# RBAC 权限控制模型配置文件

# 请求定义：定义访问请求的四个要素
# sub: 主体（用户ID或角色） dom: 域（租户ID，支持多租户隔离）obj: 资源对象（如 project、package、user 等） act: 操作行为（如 read、write、delete 等）
[request_definition]
r = sub, dom, obj, act

# 策略定义：定义权限策略的四个要素
# 与请求定义保持一致的结构
[policy_definition]
p = sub, dom, obj, act

# 角色定义：支持三级角色继承
# 第一个参数：用户或角色 第二个参数：继承的角色 第三个参数：域（租户）
[role_definition]
g = _, _, _

# 策略效果：只要有一个策略允许就通过
# 采用允许优先的策略效果
[policy_effect]
e = some(where (p.eft == allow))

# 匹配器：定义权限匹配规则
# 1. g(r.sub, p.sub, r.dom): 检查用户在指定域中是否拥有对应角色
# 2. (p.dom == "*" || r.dom == p.dom): 策略域为通配符或与请求域匹配
# 3. (p.obj == "*" || r.obj == p.obj): 策略对象为通配符或与请求对象匹配  
# 4. (p.act == "*" || r.act == p.act): 策略行为为通配符或与请求行为匹配
[matchers]
m = g(r.sub, p.sub, r.dom) && (p.dom == "*" || r.dom == p.dom) && (p.obj == "*" || r.obj == p.obj) && (p.act == "*" || r.act == p.act)